GPHBLOG
----------------------------------------------------------------------
Readme for project Gphblog (Garmoncheg's Photo Blog)

This project is my try to make my first own Django project.
I selected to make a personal photoblog, that you could easily connect to your 
django powered website.
This project is a demo for learning Django, Ajax, jQuery and Git.)
It uses lots of jQuery and Javascript in order to work.

Screenshots:
----------------------------------------------------------------------
    Available in screenshots folder of this project.

Dependencies:
----------------------------------------------------------------------
You have to have this things installed:

    - Django 1.1
    - sorl-thumbnails v 11.0 (for thumbnails generation)
        url: https://github.com/sorl/sorl-thumbnail.git
    - PIL (python imaging library) (for everything)
        need to be compiled with support of Freetype2 library
        in order for captcha to work properly
        a good solution to compile it for the mac is here:
        http://www.kyngchaos.com/macosx/build/freetype2
        url: http://www.pythonware.com/products/pil/

Things included in the distribution:
    - django-syncr 0.4.1
        version used, included in the project
        django backend for Flickr Python API
        also app to sync various services with django
        url: http://media.jesselegg.com/syncr/syncr.app.html
    - python Flickr API
        version used, included in the project 
        url: http://stuvel.eu/projects/flickrapi
    - django notification
        version used, included in the project (v0.2.0a)
        (commented out sending mail procedures in order to
        use debugging without send_mail)
        url: https://github.com/jtauber/django-notification/
    - django pagination
        version used, included in the project
        url: http://code.google.com/p/django-pagination/
    - django django-simple-captcha
        version used, included in the project
        url: http://code.google.com/p/django-simple-captcha/
    - blueprint (CSS framework)
        version used, included in the project
        url: http://www.blueprintcss.org/
    - django-tagging (0.3.1)
        version used, included in the project
        url: http://code.google.com/p/django-tagging/
    - jQuery Tags Input
        version used, included in the project
        url: http://xoxco.com/clickable/jquery-tags-input
    - jQuery File Upload by Sebastian Tschan
        version used, included in the project.
        changed demo source codes used mostly
        url: http://aquantum-demo.appspot.com/file-upload
    - social_auth (0.3.20)
        version used, included in the project.
        Django-social-auth application, allows OpenId or OAuth user
        registration/authentication just adding a few configurations
        url: https://github.com/omab/django-social-auth
    - oauth2 (1.5)
        version used, included in the project.
        used for django social_auth
        url: https://github.com/dgouldin/python-oauth2
    - httplib2 (0.7.0)
        version used, included in the project.
        used for oauth2
        url: http://code.google.com/p/httplib2/

Installation:
----------------------------------------------------------------------
Use settings.py.example for creating your own configuration.
(rename it to settings.py and watch for the comments)
You must also configure the flickr content grabber and create an app for it
(if you want to load your photos from Flickr).
You must also have PIL compiled with support of Freetype2 library
in order for captcha to work properly.

Extra Information
----------------------------------------------------------------------
    For the latest updates, see CHANGELOG.
    
    
How to register content grabber on Flickr:
----------------------------------------------------------------------
    Let's write how to get things done on flickr authentication
    for "Photoblog" to sync content with Flickr properly:
    1. You need to "Obtain an API key" for e.g. from here:
    
        http://www.flickr.com/services/apps/create/apply/
        
    2. Save your KEY and SECRET pair received in the main settings.py file.
        for e.g:
        
        FLICKR_API_KEY = '9a0554259914a86fb9e7eb014e4e5d52'
        FLICKR_API_SECRET = '000005fab4534d05'
        
    3. Add at least 1 Screenshot to your app and at least 1 tag, 
        in order to make your app public.
    
    4. Add your app Callback URL:
    
        for e.g.:   http://yoursite.com/content/callback/
        
       in order flickr to redirect after authentication directly to your site.

    You can read about how Flickr API works and why do you need all this things here:
        http://www.flickr.com/services/api/auth.howto.web.html
        

How to register Social authentification apps:
----------------------------------------------------------------------

in development...